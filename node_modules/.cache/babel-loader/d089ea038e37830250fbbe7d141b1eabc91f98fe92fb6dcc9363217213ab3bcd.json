{"ast":null,"code":"var _jsxFileName = \"/Users/vantwembeke/Github/DogSwap v2/src/utils/network.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { Contract, ethers } from \"ethers\";\nimport { createTheme, ThemeProvider } from \"@mui/material\";\nimport { SnackbarProvider } from \"notistack\";\nimport ConnectWalletPage from \"../pages/connectWalletPage\";\nimport { getAccount, getFactory, getRouter, getNetwork, getWeth } from \"./ethereumFunctions\";\nimport COINS from \"../constants/coins\";\nimport * as chains from \"../constants/chains\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#6a9d6d\",\n      contrastText: \"#ffffff\"\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#ffffff\"\n    }\n  }\n});\nconst autoReconnectDelay = 5000;\nconst Web3Provider = props => {\n  _s();\n  const [isConnected, setConnected] = useState(false);\n  const [network, setNetwork] = useState({\n    provider: null,\n    signer: null,\n    account: null,\n    coins: [],\n    chainID: null,\n    router: null,\n    factory: null,\n    weth: null\n  });\n  const backgroundListener = useRef(null);\n  const setupConnection = async () => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const account = await getAccount();\n      const chainId = await getNetwork(provider);\n      if (chains.networks.includes(chainId)) {\n        const router = await getRouter(chains.routerAddress.get(chainId), signer);\n        const coins = COINS.get(chainId);\n        const wethAddress = await router.WETH();\n        const weth = getWeth(wethAddress, signer);\n        const factory = await getFactory(await router.factory(), signer);\n        setNetwork({\n          provider,\n          signer,\n          account,\n          coins: [{\n            ...coins[0],\n            address: wethAddress\n          }, ...coins.slice(1)],\n          chainID: chainId,\n          router,\n          factory,\n          weth\n        });\n        setConnected(true);\n      } else {\n        console.log(\"Wrong network mate.\");\n        setConnected(false);\n      }\n    } catch (error) {\n      console.log(error);\n      setConnected(false);\n    }\n  };\n  const createListener = () => {\n    return setInterval(async () => {\n      try {\n        const account = await getAccount();\n        if (account !== network.account) {\n          await setupConnection();\n        }\n      } catch (error) {\n        setConnected(false);\n        await setupConnection();\n      }\n    }, 1000);\n  };\n  useEffect(() => {\n    const init = async () => {\n      await setupConnection();\n      if (backgroundListener.current) {\n        clearInterval(backgroundListener.current);\n      }\n      backgroundListener.current = createListener();\n    };\n    init();\n    return () => {\n      if (backgroundListener.current) {\n        clearInterval(backgroundListener.current);\n      }\n    };\n  }, [network.account, network.chainID, network.provider]); // Dependencies to trigger re-run\n\n  const renderNotConnected = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ConnectWalletPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(SnackbarProvider, {\n      maxSnack: 3,\n      children: [!isConnected && renderNotConnected(), isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.render(network)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Web3Provider, \"tOdnnq2PhOgZ4ZFElqdDOrF0oGA=\");\n_c = Web3Provider;\nexport default Web3Provider;\nvar _c;\n$RefreshReg$(_c, \"Web3Provider\");","map":{"version":3,"names":["useEffect","useState","useRef","Contract","ethers","createTheme","ThemeProvider","SnackbarProvider","ConnectWalletPage","getAccount","getFactory","getRouter","getNetwork","getWeth","COINS","chains","jsxDEV","_jsxDEV","theme","palette","primary","main","contrastText","secondary","autoReconnectDelay","Web3Provider","props","_s","isConnected","setConnected","network","setNetwork","provider","signer","account","coins","chainID","router","factory","weth","backgroundListener","setupConnection","providers","window","ethereum","getSigner","chainId","networks","includes","routerAddress","get","wethAddress","WETH","address","slice","console","log","error","createListener","setInterval","init","current","clearInterval","renderNotConnected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","maxSnack","render","_c","$RefreshReg$"],"sources":["/Users/vantwembeke/Github/DogSwap v2/src/utils/network.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport { Contract, ethers } from \"ethers\";\nimport { createTheme, ThemeProvider } from \"@mui/material\";\nimport { SnackbarProvider } from \"notistack\";\nimport ConnectWalletPage from \"../pages/connectWalletPage\";\nimport {\n  getAccount,\n  getFactory,\n  getRouter,\n  getNetwork,\n  getWeth,\n} from \"./ethereumFunctions\";\nimport COINS from \"../constants/coins\";\nimport * as chains from \"../constants/chains\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#6a9d6d\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nconst autoReconnectDelay = 5000;\n\nconst Web3Provider = (props) => {\n  const [isConnected, setConnected] = useState(false);\n  const [network, setNetwork] = useState({\n    provider: null,\n    signer: null,\n    account: null,\n    coins: [],\n    chainID: null,\n    router: null,\n    factory: null,\n    weth: null,\n  });\n\n  const backgroundListener = useRef(null);\n\n  const setupConnection = async () => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const account = await getAccount();\n      const chainId = await getNetwork(provider);\n\n      if (chains.networks.includes(chainId)) {\n        const router = await getRouter(chains.routerAddress.get(chainId), signer);\n        const coins = COINS.get(chainId);\n        const wethAddress = await router.WETH();\n        const weth = getWeth(wethAddress, signer);\n        const factory = await getFactory(await router.factory(), signer);\n\n        setNetwork({\n          provider,\n          signer,\n          account,\n          coins: [{ ...coins[0], address: wethAddress }, ...coins.slice(1)],\n          chainID: chainId,\n          router,\n          factory,\n          weth,\n        });\n        setConnected(true);\n      } else {\n        console.log(\"Wrong network mate.\");\n        setConnected(false);\n      }\n    } catch (error) {\n      console.log(error);\n      setConnected(false);\n    }\n  };\n\n  const createListener = () => {\n    return setInterval(async () => {\n      try {\n        const account = await getAccount();\n        if (account !== network.account) {\n          await setupConnection();\n        }\n      } catch (error) {\n        setConnected(false);\n        await setupConnection();\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      await setupConnection();\n      if (backgroundListener.current) {\n        clearInterval(backgroundListener.current);\n      }\n      backgroundListener.current = createListener();\n    };\n\n    init();\n\n    return () => {\n      if (backgroundListener.current) {\n        clearInterval(backgroundListener.current);\n      }\n    };\n  }, [network.account, network.chainID, network.provider]); // Dependencies to trigger re-run\n\n  const renderNotConnected = () => (\n    <div className=\"App\">\n      <ConnectWalletPage />\n    </div>\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SnackbarProvider maxSnack={3}>\n        {!isConnected && renderNotConnected()}\n        {isConnected && <div>{props.render(network)}</div>}\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default Web3Provider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}